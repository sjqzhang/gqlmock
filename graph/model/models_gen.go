// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type AddProjectMemberInput struct {
	// 专项id
	ProjectID int `json:"project_id"`
	// 要操作的成员信息列表
	MemberList []*ProjectMemberInput `json:"member_list"`
}

type CommonEnum struct {
	Code       int    `json:"code"`
	StatusName string `json:"status_name"`
}

type DataChangeHistory struct {
	// 数据表名
	TabName *string `json:"tab_name"`
	// 字段名
	FieldName *string `json:"field_name"`
	// 变更的数据记录ID
	RecordID *int `json:"record_id"`
	// 操作类型，insert/update/delete
	OperType *string `json:"oper_type"`
	// 旧值
	OldValue *string `json:"old_value"`
	// 新值
	NewValue *string `json:"new_value"`
	// 操作人
	CreateBy *string `json:"create_by"`
	// 操作时间
	Ctime *int `json:"ctime"`
}

type DeleteGanttGroupMembersInput struct {
	// 甘特图小组id
	GanttGroupID int `json:"gantt_group_id"`
	// 要操作的成员信息列表
	MemberList []string `json:"member_list"`
}

type DeleteProjectMemberInput struct {
	// 专项id
	ProjectID int `json:"project_id"`
	// 要操作的成员email列表
	MemberList []string `json:"member_list"`
}

type EarmakedPrjTaskInfo struct {
	DepartID   string              `json:"depart_id"`
	DepartName string              `json:"depart_name"`
	TaskList   []*EarmakedTaskInfo `json:"task_list"`
}

type EarmakedTaskInfo struct {
	// 本task的信息
	Info *ReqPoolTaskInfo `json:"info"`
	// 本task关联的子task列表
	RelatedTaskList []*EarmakedTaskInfo `json:"related_task_list"`
	// 本task的subtask列表
	SubtaskList []*PrjSubtaskInfo `json:"subtask_list"`
}

type EnumsResult struct {
	// 流程状态
	PrjFlowStatus []*CommonEnum `json:"prj_flow_status"`
	// 流程close的原因类型
	PrjFlowCloseRemark []*CommonEnum `json:"prj_flow_close_remark"`
	// 需求的优先级
	ReqPriority []*CommonEnum `json:"req_priority"`
	// 需求的类型
	ReqType []*CommonEnum `json:"req_type"`
	// subtask jira状态
	SubtaskJiraStatus []*CommonEnum `json:"subtask_jira_status"`
	// 专项进展
	PrjProgress []*CommonEnum `json:"prj_progress"`
	// 专项状态
	PrjState []*CommonEnum `json:"prj_state"`
	// 专项风险
	PrjRisk []*CommonEnum `json:"prj_risk"`
	// 专项类型
	PrjType []*CommonEnum `json:"prj_type"`
	// 专项成员角色
	PrjMemberRole []*CommonEnum `json:"prj_member_role"`
	// 里程碑状态
	MilestoneState []*CommonEnum `json:"milestone_state"`
}

type FlowRelationInfo struct {
	JiraID    int    `json:"jira_id"`
	JiraKey   string `json:"jira_key"`
	GroupID   int    `json:"group_id"`
	FlowID    int    `json:"flow_id"`
	FlowState int    `json:"flow_state"`
}

type FlowRelationInput struct {
	JiraID  int    `json:"jira_id"`
	JiraKey string `json:"jira_key"`
	GroupID *int   `json:"group_id"`
}

type GanttGroupDetail struct {
	// 甘特图小组id
	ID *int `json:"id"`
	// 甘特图小组名字
	Name *string `json:"name"`
	// 甘特图小组描述
	Desc *string `json:"desc"`
	// 甘特图小组负责人
	Owner []*string `json:"owner"`
	// 甘特图小组所属部门
	DepartmentID *string `json:"department_id"`
	// 甘特图小组所关联的叶子结点id
	GroupKeyID []*string `json:"group_key_id"`
	// 小组成员列表
	MemberList []*string `json:"member_list"`
}

type GanttGroupInfo struct {
	// 甘特图小组id
	ID *int `json:"id"`
	// 甘特图小组名字
	Name *string `json:"name"`
	// 甘特图小组描述
	Desc *string `json:"desc"`
	// 甘特图小组负责人
	Owner []*string `json:"owner"`
}

// 创建/修改甘特图小组入参
type GanttGroupInput struct {
	// 甘特图小组名称
	Name string `json:"name"`
	// 甘特图小组描述
	Desc *string `json:"desc"`
	// 甘特图小组负责人
	Owner []*string `json:"owner"`
	// 甘特图小组所属部门id
	DepartmentID string `json:"department_id"`
	// 甘特图小组所关联的叶子节点id
	GroupKeyIds []*string `json:"group_key_ids"`
	// 要添加的成员email列表
	MemberList []*string `json:"member_list"`
}

type GanttGroupMemberInput struct {
	// 甘特图小组id
	GanttGroupID int `json:"gantt_group_id"`
	// 要操作的成员信息列表
	MemberList []string `json:"member_list"`
}

type GanttGroupMembersPagerInfo struct {
	// 甘特图小组成员列表
	GanttGroupMemberList []*PrjGanttGroupMemberTab `json:"gantt_group_member_list"`
	// 本次查询返回的成员数量
	Total int `json:"total"`
}

// 甘特图小组subtask列表返回值
type GanttGroupTaskInfo struct {
	// 成员列表
	MemberList []string `json:"member_list"`
	// subtask列表
	SubtaskList []*PrjSubtaskInfo `json:"subtask_list"`
	// task列表
	TaskList []*PrjSubtaskInfo `json:"task_list"`
}

type GanttGroupsPagerInfo struct {
	// 甘特图小组列表
	GanttGroupList []*GanttGroupInfo `json:"gantt_group_list"`
	// 本次查询返回的甘特图小组数量
	Total int `json:"total"`
}

type JiraBoardsTaskInput struct {
	// 指定的jira boards列表
	JiraBoards []string `json:"jira_boards"`
	// 需要模糊查询的jira_key
	JiraKey *string `json:"jira_key"`
	// 当前页
	Current int `json:"current"`
	// 每页记录数
	Size int `json:"size"`
}

type JiraKeyJiraIDInfo struct {
	JiraKey *string `json:"jira_key"`
	JiraID  *int    `json:"jira_id"`
}

type JiraKeyJiraIDInput struct {
	JiraKey *string `json:"jira_key"`
	JiraID  *int    `json:"jira_id"`
}

type MilestoneInfo struct {
	// 里程碑id
	ID int `json:"id"`
	// 专项id
	ProjectID int `json:"project_id"`
	// 里程碑排序号
	OrderNum int `json:"order_num"`
	// 里程碑名称
	Name string `json:"name"`
	// 里程碑描述
	Desc *string `json:"desc"`
	// 里程碑状态
	State int `json:"state"`
	// 里程碑负责人
	Owner []string `json:"owner"`
	// 计划完成时间
	PlanEndTime *int `json:"plan_end_time"`
	// 实际完成时间
	RealEndTime *int `json:"real_end_time"`
}

// 创建/修改里程碑入参
type MilestoneInput struct {
	// 里程碑排序号
	OrderNum int `json:"order_num"`
	// 里程碑名称
	Name *string `json:"name"`
	// 里程碑描述
	Desc *string `json:"desc"`
	// 里程碑状态
	State *int `json:"state"`
	// 里程碑负责人
	Owner []string `json:"owner"`
	// 计划完成时间
	PlanEndTime *int `json:"plan_end_time"`
	// 实际完成时间
	RealEndTime *int `json:"real_end_time"`
}

type MilestonePagerInfo struct {
	// 里程碑列表
	MilestoneList []*MilestoneInfo `json:"milestone_list"`
	// 本次查询返回的里程碑数量
	Total int `json:"total"`
}

type PagerFrontInput struct {
	Pageno int `json:"pageno"`
	Count  int `json:"count"`
}

type PagerInput struct {
	Limit  int `json:"limit"`
	Offset int `json:"offset"`
}

type PrjChangeRecordTab struct {
	ID        *int    `json:"id"`
	TabName   *string `json:"tab_name"`
	FieldName *string `json:"field_name"`
	RecordID  *int    `json:"record_id"`
	OperType  *string `json:"oper_type"`
	OldValue  *string `json:"old_value"`
	NewValue  *string `json:"new_value"`
	CreateBy  *string `json:"create_by"`
	UpdateBy  *string `json:"update_by"`
	Ctime     *int    `json:"ctime"`
	Mtime     *int    `json:"mtime"`
	IsDeleted *int    `json:"is_deleted"`
}

type PrjChangeRecordTabInput struct {
	ID        *int    `json:"id"`
	TabName   *string `json:"tab_name"`
	FieldName *string `json:"field_name"`
	RecordID  *int    `json:"record_id"`
	OperType  *string `json:"oper_type"`
	OldValue  *string `json:"old_value"`
	NewValue  *string `json:"new_value"`
	CreateBy  *string `json:"create_by"`
	UpdateBy  *string `json:"update_by"`
	Ctime     *int    `json:"ctime"`
	Mtime     *int    `json:"mtime"`
	IsDeleted *int    `json:"is_deleted"`
}

type PrjChangeRecordTabPagerInfo struct {
	Items []*PrjChangeRecordTab `json:"items"`
	Total int                   `json:"total"`
}

type PrjGanttGroupDepartmentTab struct {
	ID *int `json:"id"`
	// gantt_group_id
	GanttGroupID *int `json:"gantt_group_id"`
	// department_id
	DepartmentID *string `json:"department_id"`
	// group_key_id
	GroupKeyID *string `json:"group_key_id"`
	UpdateBy   *string `json:"update_by"`
	CreateBy   *string `json:"create_by"`
	Mtime      *int    `json:"mtime"`
	Ctime      *int    `json:"ctime"`
	IsDeleted  *int    `json:"is_deleted"`
}

type PrjGanttGroupDepartmentTabInput struct {
	ID *int `json:"id"`
	// gantt_group_id
	GanttGroupID *int `json:"gantt_group_id"`
	// department_id
	DepartmentID *string `json:"department_id"`
	// group_key_id
	GroupKeyID *string `json:"group_key_id"`
	UpdateBy   *string `json:"update_by"`
	CreateBy   *string `json:"create_by"`
	Mtime      *int    `json:"mtime"`
	Ctime      *int    `json:"ctime"`
	IsDeleted  *int    `json:"is_deleted"`
}

type PrjGanttGroupDepartmentTabPagerInfo struct {
	Items []*PrjGanttGroupDepartmentTab `json:"items"`
	Total int                           `json:"total"`
}

type PrjGanttGroupMemberTab struct {
	ID           *int    `json:"id"`
	UserEmail    *string `json:"user_email"`
	GanttGroupID *int    `json:"gantt_group_id"`
	UpdateBy     *string `json:"update_by"`
	CreateBy     *string `json:"create_by"`
	Mtime        *int    `json:"mtime"`
	Ctime        *int    `json:"ctime"`
	IsDeleted    *int    `json:"is_deleted"`
}

type PrjGanttGroupMemberTabInput struct {
	ID           *int    `json:"id"`
	UserEmail    *string `json:"user_email"`
	GanttGroupID *int    `json:"gantt_group_id"`
	UpdateBy     *string `json:"update_by"`
	CreateBy     *string `json:"create_by"`
	Mtime        *int    `json:"mtime"`
	Ctime        *int    `json:"ctime"`
	IsDeleted    *int    `json:"is_deleted"`
}

type PrjGanttGroupMemberTabPagerInfo struct {
	Items []*PrjGanttGroupMemberTab `json:"items"`
	Total int                       `json:"total"`
}

type PrjGanttGroupTab struct {
	ID *int `json:"id"`
	// gantt_name
	GanttName *string `json:"gantt_name"`
	// gentt_desc
	GenttDesc *string `json:"gentt_desc"`
	// owner
	Owner     *string `json:"owner"`
	UpdateBy  *string `json:"update_by"`
	CreateBy  *string `json:"create_by"`
	Mtime     *int    `json:"mtime"`
	Ctime     *int    `json:"ctime"`
	IsDeleted *int    `json:"is_deleted"`
}

type PrjGanttGroupTabInput struct {
	ID *int `json:"id"`
	// gantt_name
	GanttName *string `json:"gantt_name"`
	// gentt_desc
	GenttDesc *string `json:"gentt_desc"`
	// owner
	Owner     *string `json:"owner"`
	UpdateBy  *string `json:"update_by"`
	CreateBy  *string `json:"create_by"`
	Mtime     *int    `json:"mtime"`
	Ctime     *int    `json:"ctime"`
	IsDeleted *int    `json:"is_deleted"`
}

type PrjGanttGroupTabPagerInfo struct {
	Items []*PrjGanttGroupTab `json:"items"`
	Total int                 `json:"total"`
}

type PrjMilestoneTab struct {
	ID *int `json:"id"`
	// project_id
	ProjectID *int `json:"project_id"`
	// name
	Name *string `json:"name"`
	// owner
	Owner *string `json:"owner"`
	// order_num
	OrderNum    *int `json:"order_num"`
	State       *int `json:"state"`
	PlanEndTime *int `json:"plan_end_time"`
	RealEndTime *int `json:"real_end_time"`
	// start_time
	StartTime *int `json:"start_time"`
	// end_time
	EndTime *int `json:"end_time"`
	// desc
	Desc      *string `json:"desc"`
	UpdateBy  *string `json:"update_by"`
	CreateBy  *string `json:"create_by"`
	Mtime     *int    `json:"mtime"`
	Ctime     *int    `json:"ctime"`
	IsDeleted *int    `json:"is_deleted"`
}

type PrjMilestoneTabInput struct {
	ID *int `json:"id"`
	// project_id
	ProjectID *int `json:"project_id"`
	// name
	Name *string `json:"name"`
	// owner
	Owner *string `json:"owner"`
	// order_num
	OrderNum    *int `json:"order_num"`
	State       *int `json:"state"`
	PlanEndTime *int `json:"plan_end_time"`
	RealEndTime *int `json:"real_end_time"`
	// start_time
	StartTime *int `json:"start_time"`
	// end_time
	EndTime *int `json:"end_time"`
	// desc
	Desc      *string `json:"desc"`
	UpdateBy  *string `json:"update_by"`
	CreateBy  *string `json:"create_by"`
	Mtime     *int    `json:"mtime"`
	Ctime     *int    `json:"ctime"`
	IsDeleted *int    `json:"is_deleted"`
}

type PrjMilestoneTabPagerInfo struct {
	Items []*PrjMilestoneTab `json:"items"`
	Total int                `json:"total"`
}

type PrjProjectDepartmentTab struct {
	ID        *int `json:"id"`
	ProjectID *int `json:"project_id"`
	// department_key_id
	DepartmentKeyID *string `json:"department_key_id"`
	// group_key_id
	GroupKeyID *string `json:"group_key_id"`
	UpdateBy   *string `json:"update_by"`
	CreateBy   *string `json:"create_by"`
	Mtime      *int    `json:"mtime"`
	Ctime      *int    `json:"ctime"`
	IsDeleted  *int    `json:"is_deleted"`
}

type PrjProjectDepartmentTabInput struct {
	ID        *int `json:"id"`
	ProjectID *int `json:"project_id"`
	// department_key_id
	DepartmentKeyID *string `json:"department_key_id"`
	// group_key_id
	GroupKeyID *string `json:"group_key_id"`
	UpdateBy   *string `json:"update_by"`
	CreateBy   *string `json:"create_by"`
	Mtime      *int    `json:"mtime"`
	Ctime      *int    `json:"ctime"`
	IsDeleted  *int    `json:"is_deleted"`
}

type PrjProjectDepartmentTabPagerInfo struct {
	Items []*PrjProjectDepartmentTab `json:"items"`
	Total int                        `json:"total"`
}

type PrjProjectTab struct {
	ID *int `json:"id"`
	// name
	Name *string `json:"name"`
	// description
	Description *string `json:"description"`
	// owner
	Owner    *string `json:"owner"`
	Progress *int    `json:"progress"`
	Risk     *int    `json:"risk"`
	// state
	State     *int    `json:"state"`
	StateDesc *string `json:"state_desc"`
	// start_time
	StartTime *int `json:"start_time"`
	// end_time
	EndTime *int `json:"end_time"`
	// prj_type
	PrjType   *int    `json:"prj_type"`
	UpdateBy  *string `json:"update_by"`
	CreateBy  *string `json:"create_by"`
	Mtime     *int    `json:"mtime"`
	Ctime     *int    `json:"ctime"`
	IsDeleted *int    `json:"is_deleted"`
}

type PrjProjectTabInput struct {
	ID *int `json:"id"`
	// name
	Name *string `json:"name"`
	// description
	Description *string `json:"description"`
	// owner
	Owner    *string `json:"owner"`
	Progress *int    `json:"progress"`
	Risk     *int    `json:"risk"`
	// state
	State     *int    `json:"state"`
	StateDesc *string `json:"state_desc"`
	// start_time
	StartTime *int `json:"start_time"`
	// end_time
	EndTime *int `json:"end_time"`
	// prj_type
	PrjType   *int    `json:"prj_type"`
	UpdateBy  *string `json:"update_by"`
	CreateBy  *string `json:"create_by"`
	Mtime     *int    `json:"mtime"`
	Ctime     *int    `json:"ctime"`
	IsDeleted *int    `json:"is_deleted"`
}

type PrjProjectTabPagerInfo struct {
	Items []*PrjProjectTab `json:"items"`
	Total int              `json:"total"`
}

type PrjProjectUserTab struct {
	ID        *int    `json:"id"`
	ProjectID *int    `json:"project_id"`
	UserEmail *string `json:"user_email"`
	// project_role
	ProjectRole *int    `json:"project_role"`
	UpdateBy    *string `json:"update_by"`
	CreateBy    *string `json:"create_by"`
	Mtime       *int    `json:"mtime"`
	Ctime       *int    `json:"ctime"`
	IsDeleted   *int    `json:"is_deleted"`
}

type PrjProjectUserTabInput struct {
	ID        *int    `json:"id"`
	ProjectID *int    `json:"project_id"`
	UserEmail *string `json:"user_email"`
	// project_role
	ProjectRole *int    `json:"project_role"`
	UpdateBy    *string `json:"update_by"`
	CreateBy    *string `json:"create_by"`
	Mtime       *int    `json:"mtime"`
	Ctime       *int    `json:"ctime"`
	IsDeleted   *int    `json:"is_deleted"`
}

type PrjProjectUserTabPagerInfo struct {
	Items []*PrjProjectUserTab `json:"items"`
	Total int                  `json:"total"`
}

type PrjReqFlowTab struct {
	ID         *int    `json:"id"`
	JiraID     *int    `json:"jira_id"`
	JiraKey    *string `json:"jira_key"`
	GroupID    *int    `json:"group_id"`
	GroupKeyID *string `json:"group_key_id"`
	FlowID     *int    `json:"flow_id"`
	UpdateBy   *string `json:"update_by"`
	CreateBy   *string `json:"create_by"`
	Mtime      *int    `json:"mtime"`
	Ctime      *int    `json:"ctime"`
	IsDeleted  *int    `json:"is_deleted"`
}

type PrjReqFlowTabInput struct {
	ID         *int    `json:"id"`
	JiraID     *int    `json:"jira_id"`
	JiraKey    *string `json:"jira_key"`
	GroupID    *int    `json:"group_id"`
	GroupKeyID *string `json:"group_key_id"`
	FlowID     *int    `json:"flow_id"`
	UpdateBy   *string `json:"update_by"`
	CreateBy   *string `json:"create_by"`
	Mtime      *int    `json:"mtime"`
	Ctime      *int    `json:"ctime"`
	IsDeleted  *int    `json:"is_deleted"`
}

type PrjReqFlowTabPagerInfo struct {
	Items []*PrjReqFlowTab `json:"items"`
	Total int              `json:"total"`
}

type PrjRequirementRelatedTab struct {
	ID             *int    `json:"id"`
	ReqID          *int    `json:"req_id"`
	JiraID         *int    `json:"jira_id"`
	JiraKey        *string `json:"jira_key"`
	RelatedReqID   *int    `json:"related_req_id"`
	RelatedJiraID  *int    `json:"related_jira_id"`
	RelatedJiraKey *string `json:"related_jira_key"`
	UpdateBy       *string `json:"update_by"`
	CreateBy       *string `json:"create_by"`
	Mtime          *int    `json:"mtime"`
	Ctime          *int    `json:"ctime"`
	IsDeleted      *int    `json:"is_deleted"`
}

type PrjRequirementRelatedTabInput struct {
	ID             *int    `json:"id"`
	ReqID          *int    `json:"req_id"`
	JiraID         *int    `json:"jira_id"`
	JiraKey        *string `json:"jira_key"`
	RelatedReqID   *int    `json:"related_req_id"`
	RelatedJiraID  *int    `json:"related_jira_id"`
	RelatedJiraKey *string `json:"related_jira_key"`
	UpdateBy       *string `json:"update_by"`
	CreateBy       *string `json:"create_by"`
	Mtime          *int    `json:"mtime"`
	Ctime          *int    `json:"ctime"`
	IsDeleted      *int    `json:"is_deleted"`
}

type PrjRequirementRelatedTabPagerInfo struct {
	Items []*PrjRequirementRelatedTab `json:"items"`
	Total int                         `json:"total"`
}

type PrjRequirementTab struct {
	ID *int `json:"id"`
	// project_id
	ProjectID *int `json:"project_id"`
	// parent_jira_id
	ParentJiraID     *int    `json:"parent_jira_id"`
	ParentJiraKey    *string `json:"parent_jira_key"`
	TaskParentJiraID *int    `json:"task_parent_jira_id"`
	// task_parent_jira_key
	TaskParentJiraKey *string `json:"task_parent_jira_key"`
	JiraID            *int    `json:"jira_id"`
	JiraKey           *string `json:"jira_key"`
	// jira_type
	JiraType *int `json:"jira_type"`
	// jira_board
	JiraBoard *string `json:"jira_board"`
	// title
	Title *string `json:"title"`
	// description
	Description *string `json:"description"`
	// 备注
	Remark *string `json:"remark"`
	// priority
	Priority *int `json:"priority"`
	// creator
	Creator *string `json:"creator"`
	// start_time
	StartTime *int `json:"start_time"`
	// end_time
	EndTime *int `json:"end_time"`
	// req_process
	ReqProcess *int `json:"req_process"`
	// storypoint
	Storypoint *int `json:"storypoint"`
	// status
	Status *int `json:"status"`
	// prj_flow_state
	PrjFlowState *int `json:"prj_flow_state"`
	// dms_flow_state
	DmsFlowState *int `json:"dms_flow_state"`
	// req_type
	ReqType *int `json:"req_type"`
	// subtask_type
	SubtaskType *int    `json:"subtask_type"`
	Assignee    *string `json:"assignee"`
	Reporter    *string `json:"reporter"`
	Dev         *string `json:"dev"`
	Qa          *string `json:"qa"`
	Pd          *string `json:"pd"`
	Be          *string `json:"be"`
	Fe          *string `json:"fe"`
	Other       *string `json:"other"`
	Fixversions *string `json:"fixversions"`
	Labels      *string `json:"labels"`
	// related_person
	RelatedPerson  *string `json:"related_person"`
	ExpectPrdDate  *int    `json:"expect_prd_date"`
	ExpectUatDate  *int    `json:"expect_uat_date"`
	ExpectLiveDate *int    `json:"expect_live_date"`
	// fe_expect_duration
	FeExpectDuration *int `json:"fe_expect_duration"`
	// be_expect_duration
	BeExpectDuration *int `json:"be_expect_duration"`
	// qa_expect_duration
	QaExpectDuration    *int    `json:"qa_expect_duration"`
	PdExpectDuration    *int    `json:"pd_expect_duration"`
	OtherExpectDuration *int    `json:"other_expect_duration"`
	Checklist           *string `json:"checklist"`
	Reports             *string `json:"reports"`
	SyncJiraTime        *int    `json:"sync_jira_time"`
	UpdateBy            *string `json:"update_by"`
	CreateBy            *string `json:"create_by"`
	Mtime               *int    `json:"mtime"`
	Ctime               *int    `json:"ctime"`
	IsDeleted           *int    `json:"is_deleted"`
}

type PrjRequirementTabInput struct {
	ID *int `json:"id"`
	// project_id
	ProjectID *int `json:"project_id"`
	// parent_jira_id
	ParentJiraID     *int    `json:"parent_jira_id"`
	ParentJiraKey    *string `json:"parent_jira_key"`
	TaskParentJiraID *int    `json:"task_parent_jira_id"`
	// task_parent_jira_key
	TaskParentJiraKey *string `json:"task_parent_jira_key"`
	JiraID            *int    `json:"jira_id"`
	JiraKey           *string `json:"jira_key"`
	// jira_type
	JiraType *int `json:"jira_type"`
	// jira_board
	JiraBoard *string `json:"jira_board"`
	// title
	Title *string `json:"title"`
	// description
	Description *string `json:"description"`
	// 备注
	Remark *string `json:"remark"`
	// priority
	Priority *int `json:"priority"`
	// creator
	Creator *string `json:"creator"`
	// start_time
	StartTime *int `json:"start_time"`
	// end_time
	EndTime *int `json:"end_time"`
	// req_process
	ReqProcess *int `json:"req_process"`
	// storypoint
	Storypoint *int `json:"storypoint"`
	// status
	Status *int `json:"status"`
	// prj_flow_state
	PrjFlowState *int `json:"prj_flow_state"`
	// dms_flow_state
	DmsFlowState *int `json:"dms_flow_state"`
	// req_type
	ReqType *int `json:"req_type"`
	// subtask_type
	SubtaskType *int    `json:"subtask_type"`
	Assignee    *string `json:"assignee"`
	Reporter    *string `json:"reporter"`
	Dev         *string `json:"dev"`
	Qa          *string `json:"qa"`
	Pd          *string `json:"pd"`
	Be          *string `json:"be"`
	Fe          *string `json:"fe"`
	Other       *string `json:"other"`
	Fixversions *string `json:"fixversions"`
	Labels      *string `json:"labels"`
	// related_person
	RelatedPerson  *string `json:"related_person"`
	ExpectPrdDate  *int    `json:"expect_prd_date"`
	ExpectUatDate  *int    `json:"expect_uat_date"`
	ExpectLiveDate *int    `json:"expect_live_date"`
	// fe_expect_duration
	FeExpectDuration *int `json:"fe_expect_duration"`
	// be_expect_duration
	BeExpectDuration *int `json:"be_expect_duration"`
	// qa_expect_duration
	QaExpectDuration    *int    `json:"qa_expect_duration"`
	PdExpectDuration    *int    `json:"pd_expect_duration"`
	OtherExpectDuration *int    `json:"other_expect_duration"`
	Checklist           *string `json:"checklist"`
	Reports             *string `json:"reports"`
	SyncJiraTime        *int    `json:"sync_jira_time"`
	UpdateBy            *string `json:"update_by"`
	CreateBy            *string `json:"create_by"`
	Mtime               *int    `json:"mtime"`
	Ctime               *int    `json:"ctime"`
	IsDeleted           *int    `json:"is_deleted"`
}

type PrjRequirementTabPagerInfo struct {
	Items []*PrjRequirementTab `json:"items"`
	Total int                  `json:"total"`
}

type PrjRiskTab struct {
	ID        *int    `json:"id"`
	ProjectID *int    `json:"project_id"`
	PreRiskID *int    `json:"pre_risk_id"`
	Title     *string `json:"title"`
	Owner     *string `json:"owner"`
	State     *int    `json:"state"`
	EndTime   *int    `json:"end_time"`
	RiskType  *int    `json:"risk_type"`
	RiskLevel *int    `json:"risk_level"`
	Solution  *string `json:"solution"`
	Remark    *string `json:"remark"`
	UpdateBy  *string `json:"update_by"`
	CreateBy  *string `json:"create_by"`
	Mtime     *int    `json:"mtime"`
	Ctime     *int    `json:"ctime"`
	IsDeleted *int    `json:"is_deleted"`
}

type PrjRiskTabInput struct {
	ID        *int    `json:"id"`
	ProjectID *int    `json:"project_id"`
	PreRiskID *int    `json:"pre_risk_id"`
	Title     *string `json:"title"`
	Owner     *string `json:"owner"`
	State     *int    `json:"state"`
	EndTime   *int    `json:"end_time"`
	RiskType  *int    `json:"risk_type"`
	RiskLevel *int    `json:"risk_level"`
	Solution  *string `json:"solution"`
	Remark    *string `json:"remark"`
	UpdateBy  *string `json:"update_by"`
	CreateBy  *string `json:"create_by"`
	Mtime     *int    `json:"mtime"`
	Ctime     *int    `json:"ctime"`
	IsDeleted *int    `json:"is_deleted"`
}

type PrjRiskTabPagerInfo struct {
	Items []*PrjRiskTab `json:"items"`
	Total int           `json:"total"`
}

// 创建子任务入参
type PrjSubtaskAddInput struct {
	// task关联的Org组织系统上的叶子节点的uuid
	GroupKeyID *string `json:"group_key_id"`
	// subtask的父task的jira_id
	ParentJiraID int `json:"parent_jira_id"`
	// subtask的父task的jira_key
	ParentKey string `json:"parent_key"`
	// Jira type:1-task，3-subtask，2-bug
	TaskType int `json:"task_type"`
	// subtask类型：1-方案设计，2-程序开发，3-开发联调，4-开发自测，5-测试设计，6-测试执行，7-需求变更
	SubtaskType int `json:"subtask_type"`
	// 标题
	Title string `json:"title"`
	// 详细说明
	Description *string `json:"description"`
	// 开始时间 如2022-05-10
	StartDate *string `json:"start_date"`
	// 结束时间 如2022-05-11
	DueDate *string `json:"due_date"`
	// 前端生成的uuid,比如3638097627
	UniqID string `json:"uniq_id"`
	// 工时：单位小时
	StoryPoints *float64 `json:"story_points"`
	// 任务的状态，比如PRD signoff、Doing、To Do
	Status     string   `json:"status"`
	Assignee   *string  `json:"assignee"`
	FixVersion []string `json:"fix_version"`
	Label      []string `json:"label"`
	// 干系人列表，以json字符串数组的形式，数组中的每个元素是干系人的配置项对象，如[{“role”:”devPic”, “name”:”zhangsan@shopee.com”}, {“role”:”qaPic”, “name”:”lisi@shopee.com”}]
	RelatedPerson  *string `json:"related_person"`
	ExpectPrdDate  *int    `json:"expect_prd_date"`
	ExpectUatDate  *int    `json:"expect_uat_date"`
	ExpectLiveDate *int    `json:"expect_live_date"`
	// Fe工程师人力预估时间
	FeExpectDuration *int `json:"fe_expect_duration"`
	// BE工程师人力预估时间
	BeExpectDuration *int `json:"be_expect_duration"`
	// Qa工程师人力预估时间
	QaExpectDuration *int `json:"qa_expect_duration"`
}

// 修改子任务入参
type PrjSubtaskEditInput struct {
	// pjm系统中表存储的唯一id，更新时要传入
	ID int `json:"id"`
	// subtask类型
	SubtaskType *int `json:"subtask_type"`
	// 标题
	Title *string `json:"title"`
	// 详细说明
	Description *string `json:"description"`
	// 开始时间 如2022-05-10
	StartDate *string `json:"start_date"`
	// 结束时间 如2022-05-11
	DueDate *string `json:"due_date"`
	// 前端生成的uuid,比如3638097627
	UniqID string `json:"uniq_id"`
	// 工时：单位小时
	StoryPoints *float64 `json:"story_points"`
	// 任务的状态，比如PRD signoff、Doing、TO DO
	Status     *string  `json:"status"`
	Assignee   *string  `json:"assignee"`
	Reporter   *string  `json:"reporter"`
	FixVersion []string `json:"fix_version"`
	Label      []string `json:"label"`
	// 干系人列表，以json字符串数组的形式，数组中的每个元素是干系人的配置项对象，如[{“role”:”devPic”, “name”:”zhangsan@shopee.com”}, {“role”:”qaPic”, “name”:”lisi@shopee.com”}]
	RelatedPerson  *string `json:"related_person"`
	ExpectPrdDate  *int    `json:"expect_prd_date"`
	ExpectUatDate  *int    `json:"expect_uat_date"`
	ExpectLiveDate *int    `json:"expect_live_date"`
	// Fe工程师人力预估时间
	FeExpectDuration *int `json:"fe_expect_duration"`
	// BE工程师人力预估时间
	BeExpectDuration *int `json:"be_expect_duration"`
	// Qa工程师人力预估时间
	QaExpectDuration *int `json:"qa_expect_duration"`
}

// 子任务详情
type PrjSubtaskInfo struct {
	// pjm系统中表存储的唯一id
	ID *int `json:"id"`
	// Org组织系统上的叶子节点的uuid
	GroupKeyID string `json:"group_key_id"`
	// subtask的父task的jira_id
	ParentJiraID int `json:"parent_jira_id"`
	// subtask的父task的jira_key
	ParentKey string `json:"parent_key"`
	// jira的id
	JiraID *int `json:"jira_id"`
	// jira的key
	JiraKey *string `json:"jira_key"`
	// Jira type:1-task，3-subtask，2-bug
	TaskType int `json:"task_type"`
	// subtask类型
	SubtaskType int `json:"subtask_type"`
	// 标题
	Title string `json:"title"`
	// 详细说明
	Description *string `json:"description"`
	// 优先级
	Priority *int `json:"priority"`
	// 负责人
	Creator string `json:"creator"`
	// 开始时间 如2022-05-10
	StartDate *string `json:"start_date"`
	// 结束时间 如2022-05-11
	DueDate *string `json:"due_date"`
	// 工时：单位小时
	StoryPoints *float64 `json:"story_points"`
	// 任务的状态，比如PRD signoff、Doing、TO DO
	Status     string   `json:"status"`
	Assignee   string   `json:"assignee"`
	Reporter   *string  `json:"reporter"`
	FixVersion []string `json:"fix_version"`
	Label      []string `json:"label"`
	// 操作的结果，比如创建和更新，0表示失败，1表示成功
	OperRet int `json:"oper_ret"`
}

type PrjUserTaskdetailTemplateTab struct {
	ID        *int    `json:"id"`
	UserEmail *string `json:"user_email"`
	// conf
	Conf      *string `json:"conf"`
	UpdateBy  *string `json:"update_by"`
	CreateBy  *string `json:"create_by"`
	Mtime     *int    `json:"mtime"`
	Ctime     *int    `json:"ctime"`
	IsDeleted *int    `json:"is_deleted"`
}

type PrjUserTaskdetailTemplateTabInput struct {
	ID        *int    `json:"id"`
	UserEmail *string `json:"user_email"`
	// conf
	Conf      *string `json:"conf"`
	UpdateBy  *string `json:"update_by"`
	CreateBy  *string `json:"create_by"`
	Mtime     *int    `json:"mtime"`
	Ctime     *int    `json:"ctime"`
	IsDeleted *int    `json:"is_deleted"`
}

type PrjUserTaskdetailTemplateTabPagerInfo struct {
	Items []*PrjUserTaskdetailTemplateTab `json:"items"`
	Total int                             `json:"total"`
}

type ProjectChangeRecord struct {
	// 操作者
	Operator *string `json:"operator"`
	// 原来的状态
	OldState *int `json:"old_state"`
	// 新的状态
	NewState *int `json:"new_state"`
	// 原来的状态描述
	OldStateDesc *string `json:"old_state_desc"`
	// 新的状态描述
	NewStateDesc *string `json:"new_state_desc"`
	// 原来的风险等级
	OldRisk *int `json:"old_risk"`
	// 新的风险等级
	NewRisk *int `json:"new_risk"`
	// "修改时间
	ChangeTime *int `json:"change_time"`
	// "修改备注
	ChangeRemark *string `json:"change_remark"`
}

type ProjectDetail struct {
	// 专项id
	ID *int `json:"id"`
	// 专项名称
	Name *string `json:"name"`
	// 专项描述
	Desc *string `json:"desc"`
	// 专项类型
	Type *int `json:"type"`
	// 专项进度
	Progress *int `json:"progress"`
	// 专项状态
	State *int `json:"state"`
	// 专项状态描述
	StateDesc *string `json:"state_desc"`
	// 专项风险
	Risk *int `json:"risk"`
	// 专项负责人
	Owner []*string `json:"owner"`
	// 专项所属部门id
	DepartmentID *string `json:"department_id"`
	// 专项所关联的叶子节点id
	GroupKeyIds []*string `json:"group_key_ids"`
	// 专项计划开始时间
	PlanStartDate *int `json:"plan_start_date"`
	// 专项计划结束时间
	PlanEndDate *int `json:"plan_end_date"`
	// 修改记录
	StateHistory []*DataChangeHistory `json:"state_history"`
}

type ProjectInfo struct {
	// 专项id
	ID *int `json:"id"`
	// 专项名字
	Name *string `json:"name"`
	// 专项描述
	Desc *string `json:"desc"`
	// 专项进度
	Progress *int `json:"progress"`
	// 专项状态
	State *int `json:"state"`
	// 专项风险
	Risk *int `json:"risk"`
	// 专项负责人
	Owner []*string `json:"owner"`
	// 专项计划开始时间
	PlanStartDate *int `json:"plan_start_date"`
	// 专项计划结束时间
	PlanEndDate *int `json:"plan_end_date"`
}

// 创建专项入参
type ProjectInput struct {
	// 专项名称
	Name string `json:"name"`
	// 专项描述
	Desc *string `json:"desc"`
	// 专项类型
	Type int `json:"type"`
	// 专项进度
	Progress int `json:"progress"`
	// 专项状态
	State *int `json:"state"`
	// 专项风险
	Risk *int `json:"risk"`
	// 专项负责人
	Owner []*string `json:"owner"`
	// 专项所属部门id
	DepartmentID string `json:"department_id"`
	// 专项所关联的叶子节点id
	GroupKeyIds []*string `json:"group_key_ids"`
	// 专项计划开始时间
	PlanStartDate *int `json:"plan_start_date"`
	// 专项计划结束时间
	PlanEndDate *int `json:"plan_end_date"`
	// 要添加的成员email列表
	MemberList []*ProjectMemberInput `json:"member_list"`
}

type ProjectMemberInfo struct {
	UserEmail string  `json:"user_email"`
	UserName  *string `json:"user_name"`
	// 产品线，对应着二级节点名称
	ProductLine *string `json:"product_line"`
	// 小组，对应着三级节点名称
	Team *string `json:"team"`
	// 角色，比如BE、FE、QA
	Role *string `json:"role"`
	// 用户在专项中的角色
	ProjectRole *int `json:"project_role"`
}

type ProjectMemberInput struct {
	// 用户邮箱
	UserEmail string `json:"user_email"`
	// 用户角色
	ProjectRole int `json:"project_role"`
}

type ProjectMemberPagerInfo struct {
	// 成员列表
	MemberList []*ProjectMemberInfo `json:"Member_list"`
	// 本次查询返回的成员数量
	Total int `json:"total"`
}

type ProjectMenuInfo struct {
	// 菜单列表
	MenuList []string `json:"Menu_list"`
}

type ProjectsPagerInfo struct {
	// 专项列表
	ProjectList []*ProjectInfo `json:"project_list"`
	// 本次查询返回的专项数量
	Total int `json:"total"`
}

type QueryProjectInput struct {
	// 专项进展
	Progress *int `json:"progress"`
	// 专项状态
	State *int `json:"state"`
	// 专项名称
	Name *string `json:"name"`
	// 专项负责人
	Owner *string `json:"owner"`
}

type QueryProjectMemberInput struct {
	// 成员邮箱
	UserEmail *string `json:"user_email"`
	// 成员角色
	ProjectRole *int `json:"project_role"`
}

// 需求池task看板查询入参
type ReqPoolTasKanBoardInput struct {
	// 项目组uuid
	GroupKeyID string `json:"group_key_id"`
	// 开始时间
	StartTime int `json:"start_time"`
	// 结束时间
	EndTime   int       `json:"end_time"`
	Current   int       `json:"current"`
	Size      int       `json:"size"`
	JiraKey   *string   `json:"jira_key"`
	JiraBoard []*string `json:"jira_board"`
	Summary   *string   `json:"summary"`
	// 父task的jira_key
	TaskParentJiraKey []*string `json:"task_parent_jira_key"`
	// flow状态
	FlowState [][]*int `json:"flow_state"`
	// 优先级，0-Low 1-Medium 2-High 3-Highest 4-Lowest 5-Minor 6-Blocker
	Priority   []*int    `json:"priority"`
	Assignee   []*string `json:"assignee"`
	Reporter   []*string `json:"reporter"`
	FixVersion []*string `json:"fix_version"`
	// 需求类型，0-日常、1-专项、2-技术、3-渠道、4-线上问题
	ReqType []*int `json:"req_type"`
	// 排序字段及顺序, mtime:更新时间、ctime:创建时间、status、assignee、reporter、priority、task_parent_jira_key
	Sorts []*SortField `json:"sorts"`
}

// 新建task入参
type ReqPoolTaskAddInput struct {
	// 前端生成的uuid,比如3638097627
	UniqID *string `json:"uniq_id"`
	// jira board
	JiraBoard         string                `json:"jira_board"`
	TaskParentJiraKey *string               `json:"task_parent_jira_key"`
	TaskParentJiraID  *int                  `json:"task_parent_jira_id"`
	RelatedTask       []*JiraKeyJiraIDInput `json:"related_task"`
	// 专项项目id
	ProjectID *int `json:"project_id"`
	// 标题
	Summary string `json:"summary"`
	// 详细说明
	Description *string `json:"description"`
	Remark      *string `json:"remark"`
	// 开始时间 时间戳表示
	StartDate *int `json:"start_date"`
	// 结束时间 时间戳表示
	DueDate             *int     `json:"due_date"`
	Assignee            *string  `json:"assignee"`
	Reporter            *string  `json:"reporter"`
	Be                  []string `json:"be"`
	Fe                  []string `json:"fe"`
	Qa                  []string `json:"qa"`
	Pd                  []string `json:"pd"`
	Other               []string `json:"other"`
	BeExpectDuration    *float64 `json:"be_expect_duration"`
	FeExpectDuration    *float64 `json:"fe_expect_duration"`
	QaExpectDuration    *float64 `json:"qa_expect_duration"`
	PdExpectDuration    *float64 `json:"pd_expect_duration"`
	OtherExpectDuration *float64 `json:"other_expect_duration"`
	FixVersion          []string `json:"fix_version"`
	Label               []string `json:"label"`
	Priority            *int     `json:"priority"`
	ReqType             *int     `json:"req_type"`
	StoryPoints         *float64 `json:"story_points"`
}

// 需求池task数据
type ReqPoolTaskData struct {
	// 记录总条数
	Total *int `json:"total"`
	// 指定查询页和页大小的数据
	TaskList []*ReqPoolTaskInfo `json:"task_list"`
}

// 编辑task入参
type ReqPoolTaskEditInput struct {
	// 数据表中的主键id
	ID int `json:"id"`
	// 前端生成的uuid,比如3638097627
	UniqID            *string               `json:"uniq_id"`
	TaskParentJiraKey *string               `json:"task_parent_jira_key"`
	TaskParentJiraID  *int                  `json:"task_parent_jira_id"`
	RelatedTask       []*JiraKeyJiraIDInput `json:"related_task"`
	// 专项项目id
	ProjectID *int `json:"project_id"`
	// 标题
	Summary *string `json:"summary"`
	// 详细说明
	Description *string `json:"description"`
	Remark      *string `json:"remark"`
	// flow状态
	FlowState *int `json:"flow_state"`
	// 状态变更的理由
	StateRemark *int `json:"state_remark"`
	// 开始时间 时间戳表示
	StartDate *int `json:"start_date"`
	// 结束时间 时间戳表示
	DueDate             *int     `json:"due_date"`
	Assignee            *string  `json:"assignee"`
	Reporter            *string  `json:"reporter"`
	Be                  []string `json:"be"`
	Fe                  []string `json:"fe"`
	Qa                  []string `json:"qa"`
	Pd                  []string `json:"pd"`
	Other               []string `json:"other"`
	BeExpectDuration    *float64 `json:"be_expect_duration"`
	FeExpectDuration    *float64 `json:"fe_expect_duration"`
	QaExpectDuration    *float64 `json:"qa_expect_duration"`
	PdExpectDuration    *float64 `json:"pd_expect_duration"`
	OtherExpectDuration *float64 `json:"other_expect_duration"`
	FixVersion          []string `json:"fix_version"`
	Label               []string `json:"label"`
	Priority            *int     `json:"priority"`
	ReqType             *int     `json:"req_type"`
	StoryPoints         *float64 `json:"story_points"`
}

// 需求池task详情
type ReqPoolTaskInfo struct {
	// pjm系统中表存储的唯一id
	ID *int `json:"id"`
	// task的父task的jira_key
	TaskParentJiraKey *string `json:"task_parent_jira_key"`
	// task的父task的jira_id
	TaskParentJiraID *int                 `json:"task_parent_jira_id"`
	RelatedTask      []*JiraKeyJiraIDInfo `json:"related_task"`
	SonTask          []*JiraKeyJiraIDInfo `json:"son_task"`
	// 所属的专项项目id
	ProjectID *int `json:"project_id"`
	// jira的id
	JiraID *int `json:"jira_id"`
	// jira的key
	JiraKey *string `json:"jira_key"`
	// Jira type:1-task，3-subtask，2-bug
	JiraType int `json:"jira_type"`
	// jira board
	JiraBoard *string `json:"jira_board"`
	// 需求的类型，0-日常、1-专项、2-技术、3-渠道、4-线上问题
	ReqType int `json:"req_type"`
	// 标题
	Summary string `json:"summary"`
	// 详细说明
	Description *string `json:"description"`
	Remark      *string `json:"remark"`
	// 开始时间 时间戳表示
	StartDate *int `json:"start_date"`
	// 结束时间 时间戳表示
	DueDate *int `json:"due_date"`
	// 创建时间 时间戳表示
	Ctime int `json:"ctime"`
	// 修改时间 时间戳表示
	Mtime       int     `json:"mtime"`
	StoryPoints float64 `json:"story_points"`
	// 工时：单位天，所有subtask的工时合计
	SubtaskStorypoints float64 `json:"subtask_storypoints"`
	Priority           int     `json:"priority"`
	// flow状态
	FlowState           int      `json:"flow_state"`
	Assignee            string   `json:"assignee"`
	Reporter            *string  `json:"reporter"`
	Be                  []string `json:"be"`
	Fe                  []string `json:"fe"`
	Qa                  []string `json:"qa"`
	Pd                  []string `json:"pd"`
	Other               []string `json:"other"`
	BeExpectDuration    float64  `json:"be_expect_duration"`
	FeExpectDuration    float64  `json:"fe_expect_duration"`
	QaExpectDuration    float64  `json:"qa_expect_duration"`
	PdExpectDuration    float64  `json:"pd_expect_duration"`
	OtherExpectDuration float64  `json:"other_expect_duration"`
	FixVersion          []string `json:"fix_version"`
	Labels              []string `json:"labels"`
}

// 需求池task查询入参
type ReqPoolTaskInput struct {
	// 项目组uuid
	GroupKeyID string `json:"group_key_id"`
	// 开始时间
	StartTime int `json:"start_time"`
	// 结束时间
	EndTime   int       `json:"end_time"`
	Current   int       `json:"current"`
	Size      int       `json:"size"`
	JiraKey   *string   `json:"jira_key"`
	JiraBoard []*string `json:"jira_board"`
	Summary   *string   `json:"summary"`
	// 父task的jira_key
	TaskParentJiraKey []*string `json:"task_parent_jira_key"`
	// flow状态
	FlowState []*int `json:"flow_state"`
	// 优先级，0-Low 1-Medium 2-High 3-Highest 4-Lowest 5-Minor 6-Blocker
	Priority   []*int    `json:"priority"`
	Assignee   []*string `json:"assignee"`
	Reporter   []*string `json:"reporter"`
	FixVersion []*string `json:"fix_version"`
	// 需求类型，0-日常、1-专项、2-技术、3-渠道、4-线上问题
	ReqType []*int `json:"req_type"`
	// 排序字段及顺序, mtime:更新时间、ctime:创建时间、status、assignee、reporter、priority、task_parent_jira_key
	Sorts []*SortField `json:"sorts"`
	// 是否需要总记录数
	Needtotal bool `json:"needtotal"`
}

// 创建风险入参
type RiskAddInput struct {
	// 专项ID
	ProjectID int `json:"project_id"`
	// 排序在前面的risk的id
	PreRiskID int `json:"pre_risk_id"`
	// 标题
	Title *string `json:"title"`
	// 责任人
	Owner *string `json:"owner"`
	// 状态
	State *int `json:"state"`
	// 截止时间
	EndTime *int `json:"end_time"`
	// 风险类型
	RiskType *int `json:"risk_type"`
	// 风险等级
	RiskLevel *int `json:"risk_level"`
	// 应对方案
	Solution *string `json:"solution"`
	// 备注
	Remark *string `json:"remark"`
}

// 风险信息
type RiskInfo struct {
	// 专项ID
	ProjectID int `json:"project_id"`
	// 排序在前面的risk的id
	PreRiskID int `json:"pre_risk_id"`
	// 标题
	Title *string `json:"title"`
	// 责任人
	Owner *string `json:"owner"`
	// 状态
	State *int `json:"state"`
	// 截止时间
	EndTime *int `json:"end_time"`
	// 风险类型
	RiskType *int `json:"risk_type"`
	// 风险等级
	RiskLevel *int `json:"risk_level"`
	// 应对方案
	Solution *string `json:"solution"`
	// 备注
	Remark *string `json:"remark"`
}

// 更新风险入参
type RiskUpdateInput struct {
	// 数据库ID
	ID int `json:"id"`
	// 排序在前面的risk的id
	PreRiskID int `json:"pre_risk_id"`
	// 标题
	Title *string `json:"title"`
	// 责任人
	Owner *string `json:"owner"`
	// 状态
	State *int `json:"state"`
	// 截止时间
	EndTime *int `json:"end_time"`
	// 风险类型
	RiskType *int `json:"risk_type"`
	// 风险等级
	RiskLevel *int `json:"risk_level"`
	// 应对方案
	Solution *string `json:"solution"`
	// 备注
	Remark *string `json:"remark"`
}

// 排序字段
type SortField struct {
	// 字段名
	Key string `json:"key"`
	// 规则，升序-asc 降序-desc
	Rule string `json:"rule"`
}

// 修改里程碑入参
type UpdateMilestoneInput struct {
	// 数据表唯一ID
	ID int `json:"id"`
	// 专项id
	ProjectID *int `json:"project_id"`
	// 里程碑排序号
	OrderNum *int `json:"order_num"`
	// 里程碑名称
	Name *string `json:"name"`
	// 里程碑描述
	Desc *string `json:"desc"`
	// 里程碑状态
	State *int `json:"state"`
	// 里程碑负责人
	Owner []string `json:"owner"`
	// 计划完成时间
	PlanEndTime *int `json:"plan_end_time"`
	// 实际完成时间
	RealEndTime *int `json:"real_end_time"`
}

// 修改专项入参
type UpdateProjectInput struct {
	// 专项名称
	Name *string `json:"name"`
	// 专项描述
	Desc *string `json:"desc"`
	// 专项类型
	Type *int `json:"type"`
	// 专项进度
	Progress *int `json:"progress"`
	// 专项负责人
	Owner []*string `json:"owner"`
	// 专项所属部门id
	DepartmentID *string `json:"department_id"`
	// 专项所关联的叶子节点id
	GroupKeyIds []*string `json:"group_key_ids"`
	// 专项计划开始时间
	PlanStartDate *int `json:"plan_start_date"`
	// 专项计划结束时间
	PlanEndDate *int `json:"plan_end_date"`
}

type UpdateProjectMemberInput struct {
	// 专项id
	ProjectID int `json:"project_id"`
	// 成员信息
	MemberInfo *ProjectMemberInput `json:"member_info"`
}

type UpdateProjectStateInput struct {
	// 专项状态
	State *int `json:"state"`
	// 专项状态描述
	StateDesc *string `json:"state_desc"`
	// 专项风险
	Risk *int `json:"risk"`
	// 备注
	Remark *string `json:"remark"`
}

type User struct {
	UserEmail string  `json:"user_email"`
	UserName  *string `json:"user_name"`
	// 产品线，对应着二级节点名称
	ProductLine *string `json:"product_line"`
	// 小组，对应着三级节点名称
	Team *string `json:"team"`
	// 角色，比如BE、FE、QA
	Role *string `json:"role"`
}

type UserInput struct {
	UserEmail string  `json:"user_email"`
	UserName  *string `json:"user_name"`
	// 产品线，对应着二级节点名称
	ProductLine *string `json:"product_line"`
	// 小组，对应着三级节点名称
	Team *string `json:"team"`
	// 角色，比如BE、FE、QA
	Role *string `json:"role"`
}

// 用户任务个数详情
type UserTaskNumInfo struct {
	// 用户名
	UserEmail string `json:"user_email"`
	// 未排期的子任务个数
	UnscheduledSubtasknum *int `json:"unscheduled_subtasknum"`
}
